// Sample endpoints, can use REST Client extension on VS Code to run this, or run via curl / postman / etc.

@baseUrl = http://localhost:3000
@taskId = 7a5e9113-bbe9-42cc-9ce5-f6035f77461e

// Get skills
GET {{baseUrl}}/skills

###
// Get developers
// Optional query parma: skill, eg. ?skill=1 or ?skill=1,2
GET {{baseUrl}}/developers?skill=1

###
// Get all statuses
GET {{baseUrl}}/statuses

###
// Get tasks
GET {{baseUrl}}/tasks

###
// Create task. Will assign default statusId 1 (Backlog) for simplicity, since requirement did not state need to assign status during task creation.
// There are complexities when user first create parent task with status Done, then create a subtask without being status Done.
// May be a bad user experience because user intended for parent task to be status Done.
// Will also remove "assignee" field (developer). If the skills is empty, we may be assigning a task to a developer who does not have a skill.
// Will just rely on update developer endpoint to update asignee.
POST {{baseUrl}}/tasks
{
    "title": "Mock title", // Required
    "skills": [1], // Field optional. If none, use LLM. Means under thsi tasks endpoint, should also call LLM?
    "parentTaskId": "xxx-xxx", // Optional. If creating a child subtask standalone (we may not need it though?)
    // subtasks is optional, only when we want to create child task in one shot
    "subtasks": [
        {
            "title": "Mock title", // Required
            "skills": [1], // Field optional. If none, use LLM. Means under thsi tasks endpoint, should also call LLM?
            "assignee": "xxxx-xxxx", // Should put developer id here. Field optional.If none, assignee can be left empty.
        }
    ]
}

###
POST {{baseUrl}}/tasks
content-type: application/json

{
    "title": "As a user, I want to see the website and able to login."
}


###
// Update task's status
// Have some constraints: If there is subtask, all the subtask (and nested subtasks) must be "Done" before this task can be Done.
PATCH {{baseUrl}}/tasks/60a7aa66-8eed-499b-be7f-78ac158d8094/status
content-type: application/json

{
    "statusId": "5"
}

###
// Update task's assignee (developer)
// Have some constraints: Task can only be assigned to assignee with skills(s) required by task.
// Means, the task should have at least 1 skill assigned to it... Else throw error?
PATCH {{baseUrl}}/tasks/b24c93ca-338a-41e3-acd2-6920290a570b/developer
content-type: application/json

{
    "developerId": "aa9beae9-336d-46ce-aafb-74c88992a568"
}

###
// Gemini
GET {{baseUrl}}/gemini
